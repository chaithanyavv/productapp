// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using productapp.Models;

namespace productapp.Migrations
{
    [DbContext(typeof(productcontext))]
    partial class productcontextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.13")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("productapp.Models.cart", b =>
                {
                    b.Property<int>("cart_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("prdct_id")
                        .HasColumnType("int");

                    b.Property<string>("quantity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("u_id")
                        .HasColumnType("int");

                    b.HasKey("cart_id");

                    b.HasIndex("prdct_id");

                    b.HasIndex("u_id");

                    b.ToTable("carts");
                });

            modelBuilder.Entity("productapp.Models.category", b =>
                {
                    b.Property<int>("category_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("category_name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("category_id");

                    b.ToTable("categories");
                });

            modelBuilder.Entity("productapp.Models.login", b =>
                {
                    b.Property<int>("login_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("u_id")
                        .HasColumnType("int");

                    b.Property<string>("username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("login_id");

                    b.HasIndex("u_id");

                    b.ToTable("logins");
                });

            modelBuilder.Entity("productapp.Models.product", b =>
                {
                    b.Property<int>("product_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("cat_id")
                        .HasColumnType("int");

                    b.Property<string>("description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("photo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("prduct_name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("price")
                        .HasColumnType("real");

                    b.HasKey("product_id");

                    b.HasIndex("cat_id");

                    b.ToTable("products");
                });

            modelBuilder.Entity("productapp.Models.user", b =>
                {
                    b.Property<int>("user_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("phone")
                        .HasColumnType("bigint");

                    b.Property<string>("place")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("user_id");

                    b.ToTable("users");
                });

            modelBuilder.Entity("productapp.Models.cart", b =>
                {
                    b.HasOne("productapp.Models.product", "product")
                        .WithMany("carts")
                        .HasForeignKey("prdct_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("productapp.Models.user", "user")
                        .WithMany("carts")
                        .HasForeignKey("u_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("product");

                    b.Navigation("user");
                });

            modelBuilder.Entity("productapp.Models.login", b =>
                {
                    b.HasOne("productapp.Models.user", "user")
                        .WithMany("logins")
                        .HasForeignKey("u_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("user");
                });

            modelBuilder.Entity("productapp.Models.product", b =>
                {
                    b.HasOne("productapp.Models.category", "category")
                        .WithMany("products")
                        .HasForeignKey("cat_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("category");
                });

            modelBuilder.Entity("productapp.Models.category", b =>
                {
                    b.Navigation("products");
                });

            modelBuilder.Entity("productapp.Models.product", b =>
                {
                    b.Navigation("carts");
                });

            modelBuilder.Entity("productapp.Models.user", b =>
                {
                    b.Navigation("carts");

                    b.Navigation("logins");
                });
#pragma warning restore 612, 618
        }
    }
}
